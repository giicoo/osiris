services:
  points-service:
    build: ./points-service
    environment:
      DB_USER: admin
      DB_PASSWORD: admin
      DB_DB: db
    volumes:
      - ./points-service:/app
    working_dir: /app
    ports:
      - 8081:8080
    depends_on:
      - db
      - adminer

  alerts-service:
    build: ./alerts-service
    environment:
      DB_USER: admin
      DB_PASSWORD: admin
      DB_DB: db
    volumes:
      - ./alerts-service:/app
    working_dir: /app
    ports:
      - 8082:8080
    depends_on:
      - db
      - adminer
      - rabbitmq

  auth-service:
    build: ./auth-service
    environment:
      DB_USER: admin
      DB_PASSWORD: admin
      DB_DB: db
    volumes:
      - ./auth-service:/app
    working_dir: /app
    ports:
      - 8083:8080
    depends_on:
      - db
      - adminer
  
  process-service:
    build: ./process-service
    environment:
      DB_USER: admin
      DB_PASSWORD: admin
      DB_DB: db
    volumes:
      - ./process-service:/app
    working_dir: /app
    ports:
      - 8084:8080
    depends_on:
      - db
      - adminer
      - rabbitmq
  
  notification-service:
    build: ./notification-service
    environment:
      DB_USER: admin
      DB_PASSWORD: admin
      DB_DB: db
    volumes:
      - ./notification-service:/app
    working_dir: /app
    ports:
      - 8085:8080
    depends_on:
      - db
      - adminer
      - rabbitmq

  redis:
    image: redis
    ports:
      - "6379:6379"
    

  db:
    image: postgis/postgis:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: db
    ports:
      - "5433:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ${HOME}/dev-rabbitmq/data/:/var/lib/rabbitmq
      - ${HOME}/dev-rabbitmq/log/:/var/log/rabbitmq
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  adminer:
    image: adminer
    restart: always
    ports:
      - 8090:8080
    depends_on:
      - db
      
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/key.pem:/etc/key.pem
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - db
      - rabbitmq
      - points-service
      - alerts-service
      - auth-service

  certbot:
    ports:
      - "6000:80"
    env_file:
      - .env
    volumes:
      - ./nginx/:/etc/nginx/
    build:
      context: ./certbot
      dockerfile: Dockerfile
      args:
        DOMAIN_EMAIL: ${DOMAIN_EMAIL}
        DOMAIN_URL: ${DOMAIN_URL}
